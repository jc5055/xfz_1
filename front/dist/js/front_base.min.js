function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover(),this.handleNavStatus()},FrontBase.prototype.handleNavStatus=function(){var t=window.location.href,n=window.location.host,e=window.location.protocol+"//"+n,a=t.replace(e,"");$(".nav li").each(function(t,n){var e=$(n);if(e.children("a").attr("href")===a)return e.addClass("active"),!1})},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth_box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.showEvent=function(){this.maskWrapper.show(),this.scrollWrapper=$(".scroll-wrapper")},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn"),o=$(".scroll-wrapper");n.click(function(){o.css({left:0}),t.showEvent()}),e.click(function(){o.css({left:-400}),t.showEvent()}),a.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImageClickEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled");var n=30;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSMSClickEvent())},1e3)},Auth.prototype.listenSMSClickEvent=function(){var n=this,e=$(".signup-group").find("input[name='telephone']");n.smsCaptcha.click(function(){var t=e.val();t?xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}}):messageBox.showInfo("请输入手机")})},Auth.prototype.listenSiginEvent=function(){var o=this,t=$(".signin-group"),a=t.find("input[name='telephone']"),s=t.find("input[name='password']"),i=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=a.val(),n=s.val(),e=i.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){if(200==t.code)o.hideEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)console.log(n);else for(var e in n){var a=n[e][0];console.log(a)}}},fail:function(t){console.log(t)}})})},Auth.prototype.listenSignupEvent=function(){var c=this,r=$(".signup-group");r.find('input[name="submit-btn"]').click(function(t){console.log("click"),t.preventDefault();var n=r.find("input[name='telephone']").val(),e=r.find("input[name='telephone']").val(),a=r.find("input[name='img_captcha']").val(),o=r.find("input[name='password1']").val(),s=r.find("input[name='password2']").val(),i=r.find("input[name='sms_captcha']").val();console.log("imgCaptcha is",a),console.log("smsCaptcha is",i),xfzajax.post({url:"/account/register/",data:{telephone:n,username:e,img_captcha:a,password1:o,password2:s,sms_captcha:i},success:function(t){c.hideEvent(),window.location.reload()}})})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSiginEvent(),t.listenImageClickEvent(),t.listenSMSClickEvent(),t.listenSignupEvent()},$(function(){(new FrontBase).run(),(new Auth).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),a=((new Date).getTime()-e)/1e3;return console.log(a),a<60?"刚刚":60<=a&&a<3600?(minutes=parseInt(a/60),minutes+"分钟前"):3600<=a&&a<86400?(hours=parseInt(a/60/60),hours+"小时前"):86400<=a&&a<2592e3?(days=parseInt(a/60/60/24),days+"天前"):n.getFullYear()+"年"+n.getMonth()+"月"+n.getDay()+"日"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbnRfYmFzZS5taW4uanMiLCJzb3VyY2VzIjpbImZyb250X2Jhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gRnJvbnRCYXNlKCkge1xuXG59XG5cblxuRnJvbnRCYXNlLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgc2VsZi5saXN0ZW5BdXRoQm94SG92ZXIoKVxuICAgIHNlbGYuaGFuZGxlTmF2U3RhdHVzKClcbn1cblxuRnJvbnRCYXNlLnByb3RvdHlwZS5oYW5kbGVOYXZTdGF0dXMgPSBmdW5jdGlvbiAoKXtcbiAgICB2YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWZcbiAgICB2YXIgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0XG4gICAgdmFyIHByb3RvY29sID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sXG4gICAgdmFyIGRvbWFpbiA9IHByb3RvY29sICsgXCIvL1wiICsgaG9zdFxuICAgIHZhciBwYXRoID0gdXJsLnJlcGxhY2UoZG9tYWluLCAnJylcblxuICAgIHZhciBuYXZMaXMgPSAkKCcubmF2IGxpJylcbiAgICBuYXZMaXMuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGxpID0gJChlbGVtZW50KVxuICAgICAgICB2YXIgYVRhZyA9IGxpLmNoaWxkcmVuKCdhJylcbiAgICAgICAgaWYgKGFUYWcuYXR0cignaHJlZicpID09PSBwYXRoKSB7XG4gICAgICAgICAgICBsaS5hZGRDbGFzcygnYWN0aXZlJylcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG5cbiAgICB9KVxuXG59XG5cbkZyb250QmFzZS5wcm90b3R5cGUubGlzdGVuQXV0aEJveEhvdmVyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBhdXRoX2JveCA9ICQoJy5hdXRoX2JveCcpXG4gICAgdmFyIHVzZXJNb3JlQm94ID0gJCgnLnVzZXItbW9yZS1ib3gnKVxuICAgIGF1dGhfYm94LmhvdmVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdXNlck1vcmVCb3guc2hvdygpO1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdXNlck1vcmVCb3guaGlkZSgpXG4gICAgfSlcbn1cblxuXG5mdW5jdGlvbiBBdXRoKCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHNlbGYubWFza1dyYXBwZXIgPSAkKCcubWFzay13cmFwcGVyJylcbiAgICBzZWxmLnNtc0NhcHRjaGEgPSAkKCcuc21zLWNhcHRjaGEtYnRuJylcbn1cblxuQXV0aC5wcm90b3R5cGUuc2hvd0V2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHNlbGYubWFza1dyYXBwZXIuc2hvdygpXG4gICAgc2VsZi5zY3JvbGxXcmFwcGVyID0gJChcIi5zY3JvbGwtd3JhcHBlclwiKVxuXG59XG5cbkF1dGgucHJvdG90eXBlLmhpZGVFdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBzZWxmLm1hc2tXcmFwcGVyLmhpZGUoKVxuXG59XG5cbkF1dGgucHJvdG90eXBlLmxpc3RlblNob3dIaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgdmFyIHNpZ25pbkJ0biA9ICQoJy5zaWduaW4tYnRuJylcbiAgICB2YXIgc2lnbnVwQnRuID0gJCgnLnNpZ251cC1idG4nKVxuICAgIHZhciBjbG9zZUJ0biA9ICQoJy5jbG9zZS1idG4nKVxuICAgIHZhciBzY3JvbGxXcmFwcGVyID0gJCgnLnNjcm9sbC13cmFwcGVyJylcbiAgICBzaWduaW5CdG4uY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICBzY3JvbGxXcmFwcGVyLmNzcyh7J2xlZnQnOiAwfSlcbiAgICAgICAgc2VsZi5zaG93RXZlbnQoKVxuICAgIH0pXG4gICAgc2lnbnVwQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2Nyb2xsV3JhcHBlci5jc3MoeydsZWZ0JzogLTQwMH0pXG4gICAgICAgIHNlbGYuc2hvd0V2ZW50KClcbiAgICB9KVxuICAgIGNsb3NlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2VsZi5oaWRlRXZlbnQoKVxuICAgIH0pXG59XG5cbkF1dGgucHJvdG90eXBlLmxpc3RlblN3aXRjaEV2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHZhciBzd2l0Y2hCdG4gPSAkKCcuc3dpdGNoJylcbiAgICBzd2l0Y2hCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyB2YXIgc2Nyb2xsV3JhcHBlciA9ICQoXCIuc2Nyb2xsLXdyYXBwZXJcIilcbiAgICAgICAgdmFyIGN1cnJlbnRMZWZ0ID0gc2VsZi5zY3JvbGxXcmFwcGVyLmNzcyhcImxlZnRcIilcbiAgICAgICAgY3VycmVudExlZnQgPSBwYXJzZUludChjdXJyZW50TGVmdClcbiAgICAgICAgaWYgKGN1cnJlbnRMZWZ0IDwgMCkge1xuICAgICAgICAgICAgc2VsZi5zY3JvbGxXcmFwcGVyLmFuaW1hdGUoe1wibGVmdFwiOiBcIjBcIn0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuYW5pbWF0ZSh7XCJsZWZ0XCI6IFwiLTQwMHB4XCJ9KVxuICAgICAgICB9XG4gICAgfSlcbn1cblxuQXV0aC5wcm90b3R5cGUubGlzdGVuSW1hZ2VDbGlja0V2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBpbWdDYXB0Y2hhID0gJCgnLmltZy1jYXB0Y2hhJylcbiAgICBpbWdDYXB0Y2hhLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaW1nQ2FwdGNoYS5hdHRyKFwic3JjXCIsIFwiL2FjY291bnQvaW1nX2NhcHRjaGEvP3JhbmRvbT1cIiArIE1hdGgucmFuZG9tKCkpXG4gICAgfSlcbn1cbkF1dGgucHJvdG90eXBlLnNtc1N1Y2Nlc3NFdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBtZXNzYWdlQm94LnNob3dTdWNjZXNzKCfnn63kv6Hpqozor4HnoIHlj5HpgIHmiJDlip/vvIEnKVxuICAgIHNlbGYuc21zQ2FwdGNoYS5hZGRDbGFzcygnZGlzYWJsZWQnKVxuICAgIHZhciBjb3VudCA9IDMwXG4gICAgc2VsZi5zbXNDYXB0Y2hhLnVuYmluZCgnY2xpY2snKVxuICAgIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2VsZi5zbXNDYXB0Y2hhLnRleHQoY291bnQgKyAncycpXG4gICAgICAgIGNvdW50IC09IDFcbiAgICAgICAgaWYgKGNvdW50IDw9IDApIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpXG4gICAgICAgICAgICBzZWxmLnNtc0NhcHRjaGEucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJylcbiAgICAgICAgICAgIHNlbGYuc21zQ2FwdGNoYS50ZXh0KCflj5HpgIHpqozor4HnoIEnKVxuICAgICAgICAgICAgc2VsZi5saXN0ZW5TTVNDbGlja0V2ZW50KClcbiAgICAgICAgfVxuICAgIH0sIDEwMDApXG59XG5BdXRoLnByb3RvdHlwZS5saXN0ZW5TTVNDbGlja0V2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHZhciBzaWdudXBHcm91cCA9ICQoJy5zaWdudXAtZ3JvdXAnKVxuICAgIHZhciB0ZWxlcGhvbmVCdG4gPSBzaWdudXBHcm91cC5maW5kKFwiaW5wdXRbbmFtZT0ndGVsZXBob25lJ11cIilcbiAgICBzZWxmLnNtc0NhcHRjaGEuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdGVsZXBob25lID0gdGVsZXBob25lQnRuLnZhbCgpXG4gICAgICAgIGlmICghdGVsZXBob25lKSB7XG4gICAgICAgICAgICBtZXNzYWdlQm94LnNob3dJbmZvKCfor7fovpPlhaXmiYvmnLonKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgeGZ6YWpheC5nZXQoe1xuICAgICAgICAgICAgICAgICd1cmwnOiAnL2FjY291bnQvc21zX2NhcHRjaGEvJyxcbiAgICAgICAgICAgICAgICAnZGF0YSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJ3RlbGVwaG9uZSc6IHRlbGVwaG9uZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuc21zU3VjY2Vzc0V2ZW50KClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2ZhaWwnOiBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgfSlcbn1cblxuQXV0aC5wcm90b3R5cGUubGlzdGVuU2lnaW5FdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICB2YXIgc2lnbmluR3JvdXAgPSAkKCcuc2lnbmluLWdyb3VwJylcbiAgICB2YXIgdGVsZXBob25lQnRuID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3RlbGVwaG9uZSddXCIpXG4gICAgdmFyIHBhc3N3b3JkQnRuID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Bhc3N3b3JkJ11cIilcbiAgICB2YXIgcmVtZW1iZXJCdG4gPSBzaWduaW5Hcm91cC5maW5kKFwiaW5wdXRbbmFtZT0ncmVtZW1iZXInXVwiKVxuXG4gICAgdmFyIHN1Ym1pbnRCdG4gPSBzaWduaW5Hcm91cC5maW5kKFwiLnN1Ym1pdC1idG5cIilcblxuICAgIHN1Ym1pbnRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdGVsZXBob25lID0gdGVsZXBob25lQnRuLnZhbCgpXG4gICAgICAgIHZhciBwYXNzd29yZCA9IHBhc3N3b3JkQnRuLnZhbCgpXG4gICAgICAgIHZhciByZW1lbWJlciA9IHJlbWVtYmVyQnRuLnByb3AoXCJjaGVja2VkXCIpXG5cbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcbiAgICAgICAgICAgICd1cmwnOiAnL2FjY291bnQvbG9naW4vJyxcbiAgICAgICAgICAgICdkYXRhJzoge1xuICAgICAgICAgICAgICAgICd0ZWxlcGhvbmUnOiB0ZWxlcGhvbmUsXG4gICAgICAgICAgICAgICAgJ3Bhc3N3b3JkJzogcGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgcmVtZW1iZXI6IHJlbWVtYmVyID8gMSA6IDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXNsdXQpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzbHV0Wydjb2RlJ10gPT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaGlkZUV2ZW50KClcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VPYmplY3QgPSByZXNsdXRbJ21lc3NhZ2UnXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlT2JqZWN0ID09ICdzdHJpbmcnIHx8IG1lc3NhZ2VPYmplY3QuY29uc3RydWN0b3IgPT0gU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlT2JqZWN0KVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIG1lc3NhZ2VPYmplY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZXMgPSBtZXNzYWdlT2JqZWN0W2tleV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IG1lc3NhZ2VzWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2ZhaWwnOiBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbkF1dGgucHJvdG90eXBlLmxpc3RlblNpZ251cEV2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHZhciBzaWdudXBHcm91cCA9ICQoJy5zaWdudXAtZ3JvdXAnKVxuICAgIHZhciBzdWJtaXRCdG4gPSBzaWdudXBHcm91cC5maW5kKCdpbnB1dFtuYW1lPVwic3VibWl0LWJ0blwiXScpXG4gICAgc3VibWl0QnRuLmNsaWNrKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBjb25zb2xlLmxvZygnY2xpY2snKVxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIHZhciB0ZWxlcGhvbmUgPSBzaWdudXBHcm91cC5maW5kKFwiaW5wdXRbbmFtZT0ndGVsZXBob25lJ11cIikudmFsKClcbiAgICAgICAgdmFyIHVzZXJuYW1lID0gc2lnbnVwR3JvdXAuZmluZChcImlucHV0W25hbWU9J3RlbGVwaG9uZSddXCIpLnZhbCgpXG4gICAgICAgIHZhciBpbWdDYXB0Y2hhID0gc2lnbnVwR3JvdXAuZmluZChcImlucHV0W25hbWU9J2ltZ19jYXB0Y2hhJ11cIikudmFsKClcbiAgICAgICAgdmFyIHBhc3N3b3JkMSA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdwYXNzd29yZDEnXVwiKS52YWwoKVxuICAgICAgICB2YXIgcGFzc3dvcmQyID0gc2lnbnVwR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Bhc3N3b3JkMiddXCIpLnZhbCgpXG4gICAgICAgIHZhciBzbXNDYXB0Y2hhID0gc2lnbnVwR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Ntc19jYXB0Y2hhJ11cIikudmFsKClcblxuICAgICAgICBjb25zb2xlLmxvZyhcImltZ0NhcHRjaGEgaXNcIiwgaW1nQ2FwdGNoYSlcbiAgICAgICAgY29uc29sZS5sb2coXCJzbXNDYXB0Y2hhIGlzXCIsIHNtc0NhcHRjaGEpXG5cbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcbiAgICAgICAgICAgIFwidXJsXCI6IFwiL2FjY291bnQvcmVnaXN0ZXIvXCIsXG4gICAgICAgICAgICBcImRhdGFcIjoge1xuICAgICAgICAgICAgICAgIFwidGVsZXBob25lXCI6IHRlbGVwaG9uZSxcbiAgICAgICAgICAgICAgICBcInVzZXJuYW1lXCI6IHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIFwiaW1nX2NhcHRjaGFcIjogaW1nQ2FwdGNoYSxcbiAgICAgICAgICAgICAgICBcInBhc3N3b3JkMVwiOiBwYXNzd29yZDEsXG4gICAgICAgICAgICAgICAgXCJwYXNzd29yZDJcIjogcGFzc3dvcmQyLFxuICAgICAgICAgICAgICAgIFwic21zX2NhcHRjaGFcIjogc21zQ2FwdGNoYSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcInN1Y2Nlc3NcIjogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHNlbGYuaGlkZUV2ZW50KClcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbkF1dGgucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBzZWxmLmxpc3RlblNob3dIaWRlRXZlbnQoKVxuICAgIHNlbGYubGlzdGVuU3dpdGNoRXZlbnQoKVxuICAgIHNlbGYubGlzdGVuU2lnaW5FdmVudCgpXG4gICAgc2VsZi5saXN0ZW5JbWFnZUNsaWNrRXZlbnQoKVxuICAgIHNlbGYubGlzdGVuU01TQ2xpY2tFdmVudCgpXG4gICAgc2VsZi5saXN0ZW5TaWdudXBFdmVudCgpXG59XG5cbiQoZnVuY3Rpb24gKCkge1xuICAgIHZhciBmcm9udEJhc2UgPSBuZXcgRnJvbnRCYXNlKClcbiAgICBmcm9udEJhc2UucnVuKClcbiAgICB2YXIgYXV0aCA9IG5ldyBBdXRoKClcbiAgICBhdXRoLnJ1bigpXG59KVxuXG4kKGZ1bmN0aW9uICgpe1xuICAgIGlmICh3aW5kb3cudGVtcGxhdGUpe1xuICAgICAgICB0ZW1wbGF0ZS5kZWZhdWx0cy5pbXBvcnRzLnRpbWVTaW5jZSA9IGZ1bmN0aW9uIChkYXRhVmFsdWUpIHtcbiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShkYXRhVmFsdWUpXG4gICAgICAgIHZhciBkYXRldHMgPSBkYXRlLmdldFRpbWUoKVxuICAgICAgICB2YXIgbm93dHMgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpXG4gICAgICAgIHZhciB0aW1lc3RhbXAgPSAobm93dHMgLSBkYXRldHMpIC8gMTAwMFxuXG4gICAgICAgIGNvbnNvbGUubG9nKHRpbWVzdGFtcClcblxuICAgICAgICBpZiAodGltZXN0YW1wIDwgNjApIHtcbiAgICAgICAgICAgIHJldHVybiAn5Yia5YiaJ1xuICAgICAgICB9IGVsc2UgaWYgKHRpbWVzdGFtcCA+PSA2MCAmJiB0aW1lc3RhbXAgPCA2MCAqIDYwKSB7XG4gICAgICAgICAgICBtaW51dGVzID0gcGFyc2VJbnQodGltZXN0YW1wIC8gNjApXG4gICAgICAgICAgICByZXR1cm4gbWludXRlcyArICfliIbpkp/liY0nXG4gICAgICAgIH0gZWxzZSBpZiAodGltZXN0YW1wID49IDYwICogNjAgJiYgdGltZXN0YW1wIDwgNjAgKiA2MCAqIDI0KSB7XG4gICAgICAgICAgICBob3VycyA9IHBhcnNlSW50KHRpbWVzdGFtcCAvIDYwIC8gNjApXG4gICAgICAgICAgICByZXR1cm4gaG91cnMgKyAn5bCP5pe25YmNJ1xuICAgICAgICB9IGVsc2UgaWYgKHRpbWVzdGFtcCA+PSA2MCAqIDYwICogMjQgJiYgdGltZXN0YW1wIDwgNjAgKiA2MCAqIDI0ICogMzApIHtcbiAgICAgICAgICAgIGRheXMgPSBwYXJzZUludCh0aW1lc3RhbXAgLyA2MCAvIDYwIC8gMjQpXG4gICAgICAgICAgICByZXR1cm4gZGF5cyArICflpKnliY0nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKVxuICAgICAgICAgICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKVxuICAgICAgICAgICAgcmV0dXJuIHllYXIgKyAn5bm0JyArIG1vbnRoICsgJ+aciCcgKyBkYXkgKyAn5pelJ1xuICAgICAgICB9XG4gICAgfVxuICAgIH1cblxufSkiXSwibmFtZXMiOlsiRnJvbnRCYXNlIiwiQXV0aCIsInRoaXMiLCJtYXNrV3JhcHBlciIsIiQiLCJzbXNDYXB0Y2hhIiwicHJvdG90eXBlIiwicnVuIiwibGlzdGVuQXV0aEJveEhvdmVyIiwiaGFuZGxlTmF2U3RhdHVzIiwidXJsIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwiaG9zdCIsImRvbWFpbiIsInByb3RvY29sIiwicGF0aCIsInJlcGxhY2UiLCJlYWNoIiwiaW5kZXgiLCJlbGVtZW50IiwibGkiLCJjaGlsZHJlbiIsImF0dHIiLCJhZGRDbGFzcyIsImF1dGhfYm94IiwidXNlck1vcmVCb3giLCJob3ZlciIsInNob3ciLCJoaWRlIiwic2hvd0V2ZW50Iiwic2Nyb2xsV3JhcHBlciIsImhpZGVFdmVudCIsImxpc3RlblNob3dIaWRlRXZlbnQiLCJzZWxmIiwic2lnbmluQnRuIiwic2lnbnVwQnRuIiwiY2xvc2VCdG4iLCJjbGljayIsImNzcyIsImxlZnQiLCJsaXN0ZW5Td2l0Y2hFdmVudCIsImN1cnJlbnRMZWZ0IiwicGFyc2VJbnQiLCJhbmltYXRlIiwibGlzdGVuSW1hZ2VDbGlja0V2ZW50IiwiaW1nQ2FwdGNoYSIsIk1hdGgiLCJyYW5kb20iLCJzbXNTdWNjZXNzRXZlbnQiLCJtZXNzYWdlQm94Iiwic2hvd1N1Y2Nlc3MiLCJjb3VudCIsInVuYmluZCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJ0ZXh0IiwiY2xlYXJJbnRlcnZhbCIsInJlbW92ZUNsYXNzIiwibGlzdGVuU01TQ2xpY2tFdmVudCIsInRlbGVwaG9uZUJ0biIsImZpbmQiLCJ0ZWxlcGhvbmUiLCJ2YWwiLCJ4ZnphamF4IiwiZ2V0IiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJmYWlsIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwic2hvd0luZm8iLCJsaXN0ZW5TaWdpbkV2ZW50Iiwic2lnbmluR3JvdXAiLCJwYXNzd29yZEJ0biIsInJlbWVtYmVyQnRuIiwicGFzc3dvcmQiLCJyZW1lbWJlciIsInByb3AiLCJwb3N0IiwicmVzbHV0IiwicmVsb2FkIiwibWVzc2FnZU9iamVjdCIsImNvbnN0cnVjdG9yIiwiU3RyaW5nIiwia2V5IiwibWVzc2FnZSIsImxpc3RlblNpZ251cEV2ZW50Iiwic2lnbnVwR3JvdXAiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidXNlcm5hbWUiLCJwYXNzd29yZDEiLCJwYXNzd29yZDIiLCJpbWdfY2FwdGNoYSIsInNtc19jYXB0Y2hhIiwidGVtcGxhdGUiLCJkZWZhdWx0cyIsImltcG9ydHMiLCJ0aW1lU2luY2UiLCJkYXRhVmFsdWUiLCJkYXRlIiwiRGF0ZSIsImRhdGV0cyIsImdldFRpbWUiLCJ0aW1lc3RhbXAiLCJtaW51dGVzIiwiaG91cnMiLCJkYXlzIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERheSJdLCJtYXBwaW5ncyI6IkFB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
