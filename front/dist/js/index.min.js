function Banner(){this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$(".banner-ul"),this.pageControl=$(".page-control"),this.liList=$(".banner-ul").children("li"),this.liCount=this.bannerUl.children("li").length,this.bannerWidth=800}function Index(){var n=this;n.page=2,n.category_id=0,n.loadMoreBtn=$("#load-more-btn"),template.defaults.imports.timeSince=function(n){var t=new Date(n),e=t.getTime(),i=((new Date).getTime()-e)/1e3;return console.log(i),i<60?"刚刚":60<=i&&i<3600?(minutes=parseInt(i/60),minutes+"分钟前"):3600<=i&&i<86400?(hours=parseInt(i/60/60),hours+"小时前"):86400<=i&&i<2592e3?(days=parseInt(i/60/60/24),days+"天前"):t.getFullYear()+"年"+t.getMonth()+"月"+t.getDay()+"日"}}Banner.prototype.initBannerLi=function(){var n=this;firstBanner=n.liList.eq(0).clone(),lastBanner=n.liList.eq(n.liCount-1).clone(),n.bannerUl.append(firstBanner),n.bannerUl.prepend(lastBanner),n.bannerUl.css({width:n.bannerWidth*(this.liCount+2),left:-n.bannerWidth})},Banner.prototype.initPageControll=function(){var n=this;console.log(n.liCount);for(var t=0;t<n.liCount;t++){var e=$("<li></li>");n.pageControl.append(e),0===t&&e.addClass("active")}n.pageControl.css({width:10*this.liCount+16+16*(this.liCount-1)})},Banner.prototype.arrowShow=function(n){var t=this;n?(t.leftArrow.show(),t.rightArrow.show()):(t.leftArrow.hide(),t.rightArrow.hide())},Banner.prototype.animate=function(){var n=this;n.bannerUl.stop().animate({left:-800*n.index},500),index=n.index,index=0===index?n.liCount-1:index===n.liCount+1?0:n.index-1,this.pageControl.children("li").eq(index).addClass("active").siblings().removeClass()},Banner.prototype.listenPageControll=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n,e.animate()})})},Banner.prototype.listenArrayClick=function(){var n=this;n.leftArrow.click(function(){console.log("left click"),0===n.index?(n.bannerUl.css({left:-n.liCount*n.bannerWidth}),n.index=n.liCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){console.log("right click"),n.index===n.liCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;n.bannerGroup.hover(function(){clearInterval(n.timer),n.arrowShow(!0)},function(){n.loop(),n.arrowShow(!1)})},Banner.prototype.run=function(){this.loop(),this.initPageControll(),this.initBannerLi(),this.listenArrayClick(),this.listenBannerHover(),this.listenPageControll()},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.liCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Index.prototype.listenLoadMoreEvent=function(){var i=this;i.loadMoreBtn.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){var t,e;200===n.code&&(0<(t=n.data).length?(console.log(t),e=template("news-item",{newses:t}),$(".list-inner-group").append(e),i.page+=1):i.loadMoreBtn.hide())}})})},Index.prototype.listenCategorySwitch=function(){var r=this,n=$(".list-tab"),o=$(".list-inner-group");n.children().click(function(){li=$(this);var i=li.attr("data-category");xfzajax.get({url:"/news/list/",data:{p:1,category_id:i},success:function(n){var t,e;200===n.code&&(t=n.data,e=template("news-item",{newses:t}),o.empty(),o.append(e),r.page=2,r.category_id=i,r.loadMoreBtn.show(),li.addClass("active").siblings().removeClass())}})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitch()},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgubWluLmpzIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBCYW5uZXIoKSB7XG4gICAgdGhpcy5iYW5uZXJHcm91cCA9ICQoJyNiYW5uZXItZ3JvdXAnKVxuICAgIHRoaXMuaW5kZXggPSAxXG4gICAgdGhpcy5sZWZ0QXJyb3cgPSAkKCcubGVmdC1hcnJvdycpXG4gICAgdGhpcy5yaWdodEFycm93ID0gJCgnLnJpZ2h0LWFycm93JylcbiAgICB0aGlzLmJhbm5lclVsID0gJCgnLmJhbm5lci11bCcpXG4gICAgdGhpcy5wYWdlQ29udHJvbCA9ICQoJy5wYWdlLWNvbnRyb2wnKVxuICAgIHRoaXMubGlMaXN0ID0gJCgnLmJhbm5lci11bCcpLmNoaWxkcmVuKCdsaScpXG4gICAgdGhpcy5saUNvdW50ID0gdGhpcy5iYW5uZXJVbC5jaGlsZHJlbignbGknKS5sZW5ndGhcbiAgICB0aGlzLmJhbm5lcldpZHRoID0gODAwXG5cbn1cblxuQmFubmVyLnByb3RvdHlwZS5pbml0QmFubmVyTGkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgZmlyc3RCYW5uZXIgPSBzZWxmLmxpTGlzdC5lcSgwKS5jbG9uZSgpXG4gICAgbGFzdEJhbm5lciA9IHNlbGYubGlMaXN0LmVxKHNlbGYubGlDb3VudCAtIDEpLmNsb25lKClcbiAgICBzZWxmLmJhbm5lclVsLmFwcGVuZChmaXJzdEJhbm5lcilcbiAgICBzZWxmLmJhbm5lclVsLnByZXBlbmQobGFzdEJhbm5lcilcbiAgICBzZWxmLmJhbm5lclVsLmNzcyh7J3dpZHRoJzogc2VsZi5iYW5uZXJXaWR0aCAqICh0aGlzLmxpQ291bnQgKyAyKSwgJ2xlZnQnOiAtc2VsZi5iYW5uZXJXaWR0aH0pXG59XG5cbkJhbm5lci5wcm90b3R5cGUuaW5pdFBhZ2VDb250cm9sbCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBjb25zb2xlLmxvZyhzZWxmLmxpQ291bnQpXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxmLmxpQ291bnQ7IGkrKykge1xuICAgICAgICB2YXIgY2lyY2xlID0gJCgnPGxpPjwvbGk+JylcbiAgICAgICAgc2VsZi5wYWdlQ29udHJvbC5hcHBlbmQoY2lyY2xlKVxuICAgICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICAgICAgY2lyY2xlLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICB9XG4gICAgfVxuICAgIHNlbGYucGFnZUNvbnRyb2wuY3NzKHtcIndpZHRoXCI6IHRoaXMubGlDb3VudCAqIDEwICsgMiAqIDggKyAodGhpcy5saUNvdW50IC0gMSkgKiAxNn0pXG59XG5cbkJhbm5lci5wcm90b3R5cGUuYXJyb3dTaG93ID0gZnVuY3Rpb24gKHNob3cpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgaWYgKHNob3cpIHtcbiAgICAgICAgc2VsZi5sZWZ0QXJyb3cuc2hvdygpXG4gICAgICAgIHNlbGYucmlnaHRBcnJvdy5zaG93KClcblxuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZi5sZWZ0QXJyb3cuaGlkZSgpXG4gICAgICAgIHNlbGYucmlnaHRBcnJvdy5oaWRlKClcbiAgICB9XG59XG5cbkJhbm5lci5wcm90b3R5cGUuYW5pbWF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBzZWxmLmJhbm5lclVsLnN0b3AoKS5hbmltYXRlKHtcImxlZnRcIjogLTgwMCAqIHNlbGYuaW5kZXh9LCA1MDApXG4gICAgaW5kZXggPSBzZWxmLmluZGV4XG4gICAgaWYgKGluZGV4ID09PSAwKSB7XG4gICAgICAgIGluZGV4ID0gc2VsZi5saUNvdW50IC0gMVxuICAgIH0gZWxzZSBpZiAoaW5kZXggPT09IHNlbGYubGlDb3VudCArIDEpIHtcbiAgICAgICAgaW5kZXggPSAwXG4gICAgfSBlbHNlIHtcbiAgICAgICAgaW5kZXggPSBzZWxmLmluZGV4IC0gMVxuICAgIH1cbiAgICB0aGlzLnBhZ2VDb250cm9sLmNoaWxkcmVuKCdsaScpLmVxKGluZGV4KS5hZGRDbGFzcygnYWN0aXZlJykuc2libGluZ3MoKS5yZW1vdmVDbGFzcygpXG5cbn1cblxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5QYWdlQ29udHJvbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgc2VsZi5wYWdlQ29udHJvbC5jaGlsZHJlbignbGknKS5lYWNoKGZ1bmN0aW9uIChpbmRleCwgb2JqKSB7XG4gICAgICAgICQob2JqKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gaW5kZXhcbiAgICAgICAgICAgIHNlbGYuYW5pbWF0ZSgpXG5cbiAgICAgICAgfSlcblxuICAgIH0pXG59XG5cbkJhbm5lci5wcm90b3R5cGUubGlzdGVuQXJyYXlDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBzZWxmLmxlZnRBcnJvdy5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdsZWZ0IGNsaWNrJylcbiAgICAgICAgaWYgKHNlbGYuaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgIHNlbGYuYmFubmVyVWwuY3NzKHtsZWZ0OiAtc2VsZi5saUNvdW50ICogc2VsZi5iYW5uZXJXaWR0aH0pXG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gc2VsZi5saUNvdW50IC0gMVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2VsZi5pbmRleC0tXG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5hbmltYXRlKClcbiAgICB9KVxuXG4gICAgc2VsZi5yaWdodEFycm93LmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3JpZ2h0IGNsaWNrJylcbiAgICAgICAgaWYgKHNlbGYuaW5kZXggPT09IHNlbGYubGlDb3VudCArIDEpIHtcbiAgICAgICAgICAgIHNlbGYuYmFubmVyVWwuY3NzKHtsZWZ0OiAtc2VsZi5iYW5uZXJXaWR0aH0pXG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gMlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2VsZi5pbmRleCsrXG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5hbmltYXRlKClcbiAgICB9KVxufVxuXG5CYW5uZXIucHJvdG90eXBlLmxpc3RlbkJhbm5lckhvdmVyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpc1xuICAgIHNlbGYuYmFubmVyR3JvdXAuaG92ZXIoXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoc2VsZi50aW1lcilcbiAgICAgICAgICAgIHNlbGYuYXJyb3dTaG93KHRydWUpXG5cbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2VsZi5sb29wKClcbiAgICAgICAgICAgIHNlbGYuYXJyb3dTaG93KGZhbHNlKVxuICAgICAgICB9KVxufVxuXG5CYW5uZXIucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxvb3AoKVxuICAgIHRoaXMuaW5pdFBhZ2VDb250cm9sbCgpXG4gICAgdGhpcy5pbml0QmFubmVyTGkoKVxuICAgIHRoaXMubGlzdGVuQXJyYXlDbGljaygpXG4gICAgdGhpcy5saXN0ZW5CYW5uZXJIb3ZlcigpXG4gICAgdGhpcy5saXN0ZW5QYWdlQ29udHJvbGwoKVxufVxuXG5CYW5uZXIucHJvdG90eXBlLmxvb3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHNlbGYuaW5kZXggPj0gc2VsZi5saUNvdW50ICsgMSkge1xuICAgICAgICAgICAgc2VsZi5iYW5uZXJVbC5jc3Moe1wibGVmdFwiOiAtc2VsZi5iYW5uZXJXaWR0aH0pXG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gMlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2VsZi5pbmRleCsrXG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5hbmltYXRlKClcbiAgICB9LCAyMDAwKVxufVxuXG5mdW5jdGlvbiBJbmRleCgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBzZWxmLnBhZ2UgPSAyXG4gICAgc2VsZi5jYXRlZ29yeV9pZCA9IDBcbiAgICBzZWxmLmxvYWRNb3JlQnRuID0gJCgnI2xvYWQtbW9yZS1idG4nKVxuXG5cbiAgICB0ZW1wbGF0ZS5kZWZhdWx0cy5pbXBvcnRzLnRpbWVTaW5jZSA9IGZ1bmN0aW9uIChkYXRhVmFsdWUpIHtcbiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShkYXRhVmFsdWUpXG4gICAgICAgIHZhciBkYXRldHMgPSBkYXRlLmdldFRpbWUoKVxuICAgICAgICB2YXIgbm93dHMgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpXG4gICAgICAgIHZhciB0aW1lc3RhbXAgPSAobm93dHMgLSBkYXRldHMpIC8gMTAwMFxuXG4gICAgICAgIGNvbnNvbGUubG9nKHRpbWVzdGFtcClcblxuICAgICAgICBpZiAodGltZXN0YW1wIDwgNjApIHtcbiAgICAgICAgICAgIHJldHVybiAn5Yia5YiaJ1xuICAgICAgICB9IGVsc2UgaWYgKHRpbWVzdGFtcCA+PSA2MCAmJiB0aW1lc3RhbXAgPCA2MCAqIDYwKSB7XG4gICAgICAgICAgICBtaW51dGVzID0gcGFyc2VJbnQodGltZXN0YW1wIC8gNjApXG4gICAgICAgICAgICByZXR1cm4gbWludXRlcyArICfliIbpkp/liY0nXG4gICAgICAgIH0gZWxzZSBpZiAodGltZXN0YW1wID49IDYwICogNjAgJiYgdGltZXN0YW1wIDwgNjAgKiA2MCAqIDI0KSB7XG4gICAgICAgICAgICBob3VycyA9IHBhcnNlSW50KHRpbWVzdGFtcCAvIDYwIC8gNjApXG4gICAgICAgICAgICByZXR1cm4gaG91cnMgKyAn5bCP5pe25YmNJ1xuICAgICAgICB9IGVsc2UgaWYgKHRpbWVzdGFtcCA+PSA2MCAqIDYwICogMjQgJiYgdGltZXN0YW1wIDwgNjAgKiA2MCAqIDI0ICogMzApIHtcbiAgICAgICAgICAgIGRheXMgPSBwYXJzZUludCh0aW1lc3RhbXAgLyA2MCAvIDYwIC8gMjQpXG4gICAgICAgICAgICByZXR1cm4gZGF5cyArICflpKnliY0nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKVxuICAgICAgICAgICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpXG4gICAgICAgICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKVxuICAgICAgICAgICAgcmV0dXJuIHllYXIgKyAn5bm0JyArIG1vbnRoICsgJ+aciCcgKyBkYXkgKyAn5pelJ1xuICAgICAgICB9XG4gICAgfVxufVxuXG5JbmRleC5wcm90b3R5cGUubGlzdGVuTG9hZE1vcmVFdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBzZWxmLmxvYWRNb3JlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgeGZ6YWpheC5nZXQoe1xuICAgICAgICAgICAgJ3VybCc6ICcvbmV3cy9saXN0LycsXG4gICAgICAgICAgICAnZGF0YSc6IHtcbiAgICAgICAgICAgICAgICAncCc6IHNlbGYucGFnZSxcbiAgICAgICAgICAgICAgICAnY2F0ZWdvcnlfaWQnOnNlbGYuY2F0ZWdvcnlfaWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld3NlcyA9IHJlc3VsdFsnZGF0YSddXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdzZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cobmV3c2VzKVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRwbCA9IHRlbXBsYXRlKFwibmV3cy1pdGVtXCIsIHsnbmV3c2VzJzogbmV3c2VzfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1bCA9ICQoJy5saXN0LWlubmVyLWdyb3VwJylcbiAgICAgICAgICAgICAgICAgICAgICAgIHVsLmFwcGVuZCh0cGwpXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnBhZ2UgKz0gMVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkTW9yZUJ0bi5oaWRlKClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5JbmRleC5wcm90b3R5cGUubGlzdGVuQ2F0ZWdvcnlTd2l0Y2ggPSBmdW5jdGlvbiAoKXtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICB2YXIgdGFnR3JvdXAgPSAkKCcubGlzdC10YWInKVxuICAgIHZhciBuZXdzR3RvdXAgPSAkKCcubGlzdC1pbm5lci1ncm91cCcpXG4gICAgdGFnR3JvdXAuY2hpbGRyZW4oKS5jbGljayhmdW5jdGlvbiAoKXtcbiAgICAgICAgbGkgPSAkKHRoaXMpXG4gICAgICAgIHZhciBjYXRlZ29yeV9pZCA9IGxpLmF0dHIoJ2RhdGEtY2F0ZWdvcnknKVxuICAgICAgICB2YXIgcGFnZSA9IDFcbiAgICAgICAgeGZ6YWpheC5nZXQoe1xuICAgICAgICAgICAgJ3VybCc6ICcvbmV3cy9saXN0LycsXG4gICAgICAgICAgICAnZGF0YSc6IHtcbiAgICAgICAgICAgICAgICAncCc6IHBhZ2UsXG4gICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJzpjYXRlZ29yeV9pZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXT09PTIwMCl7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdzZXMgPSByZXN1bHRbJ2RhdGEnXVxuICAgICAgICAgICAgICAgICAgICB2YXIgdHBsID0gdGVtcGxhdGUoJ25ld3MtaXRlbScseyduZXdzZXMnOm5ld3NlcyB9KVxuICAgICAgICAgICAgICAgICAgICBuZXdzR3RvdXAuZW1wdHkoKVxuICAgICAgICAgICAgICAgICAgICBuZXdzR3RvdXAuYXBwZW5kKHRwbClcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5wYWdlID0gMlxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNhdGVnb3J5X2lkID0gY2F0ZWdvcnlfaWRcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkTW9yZUJ0bi5zaG93KClcbiAgICAgICAgICAgICAgICAgICAgbGkuYWRkQ2xhc3MoJ2FjdGl2ZScpLnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgIH0pXG59XG5cbkluZGV4LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgc2VsZi5saXN0ZW5Mb2FkTW9yZUV2ZW50KClcbiAgICBzZWxmLmxpc3RlbkNhdGVnb3J5U3dpdGNoKClcbn1cbiQoZnVuY3Rpb24gKCkge1xuICAgIHZhciBiYW5uZXIgPSBuZXcgQmFubmVyKCk7XG4gICAgYmFubmVyLnJ1bigpXG5cbiAgICB2YXIgaW5kZXggPSBuZXcgSW5kZXgoKVxuICAgIGluZGV4LnJ1bigpXG59KSJdLCJuYW1lcyI6WyJCYW5uZXIiLCJ0aGlzIiwiYmFubmVyR3JvdXAiLCIkIiwiaW5kZXgiLCJsZWZ0QXJyb3ciLCJyaWdodEFycm93IiwiYmFubmVyVWwiLCJwYWdlQ29udHJvbCIsImxpTGlzdCIsImNoaWxkcmVuIiwibGlDb3VudCIsImxlbmd0aCIsImJhbm5lcldpZHRoIiwiSW5kZXgiLCJzZWxmIiwicGFnZSIsImNhdGVnb3J5X2lkIiwibG9hZE1vcmVCdG4iLCJ0ZW1wbGF0ZSIsImRlZmF1bHRzIiwiaW1wb3J0cyIsInRpbWVTaW5jZSIsImRhdGFWYWx1ZSIsImRhdGUiLCJEYXRlIiwiZGF0ZXRzIiwiZ2V0VGltZSIsInRpbWVzdGFtcCIsImNvbnNvbGUiLCJsb2ciLCJtaW51dGVzIiwicGFyc2VJbnQiLCJob3VycyIsImRheXMiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF5IiwicHJvdG90eXBlIiwiaW5pdEJhbm5lckxpIiwiZmlyc3RCYW5uZXIiLCJlcSIsImNsb25lIiwibGFzdEJhbm5lciIsImFwcGVuZCIsInByZXBlbmQiLCJjc3MiLCJ3aWR0aCIsImxlZnQiLCJpbml0UGFnZUNvbnRyb2xsIiwiaSIsImNpcmNsZSIsImFkZENsYXNzIiwiYXJyb3dTaG93Iiwic2hvdyIsImhpZGUiLCJhbmltYXRlIiwic3RvcCIsInNpYmxpbmdzIiwicmVtb3ZlQ2xhc3MiLCJsaXN0ZW5QYWdlQ29udHJvbGwiLCJlYWNoIiwib2JqIiwiY2xpY2siLCJsaXN0ZW5BcnJheUNsaWNrIiwibGlzdGVuQmFubmVySG92ZXIiLCJob3ZlciIsImNsZWFySW50ZXJ2YWwiLCJ0aW1lciIsImxvb3AiLCJydW4iLCJzZXRJbnRlcnZhbCIsImxpc3RlbkxvYWRNb3JlRXZlbnQiLCJ4ZnphamF4IiwiZ2V0IiwidXJsIiwiZGF0YSIsInAiLCJzdWNjZXNzIiwicmVzdWx0IiwibmV3c2VzIiwidHBsIiwibGlzdGVuQ2F0ZWdvcnlTd2l0Y2giLCJ0YWdHcm91cCIsIm5ld3NHdG91cCIsImxpIiwiYXR0ciIsImVtcHR5Il0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxTQUNMQyxLQUFLQyxZQUFjQyxFQUFFLGlCQUNyQkYsS0FBS0csTUFBUSxFQUNiSCxLQUFLSSxVQUFZRixFQUFFLGVBQ25CRixLQUFLSyxXQUFhSCxFQUFFLGdCQUNwQkYsS0FBS00sU0FBV0osRUFBRSxjQUNsQkYsS0FBS08sWUFBY0wsRUFB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
